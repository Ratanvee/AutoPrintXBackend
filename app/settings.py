"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import environ
# Initialise environment variables
env = environ.Env()
environ.Env.read_env()

name = env("NAME")
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

AUTH_USER_MODEL = 'smartdocx.CustomUser'


# settings.py

import os

# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_URL = '/static/'  # URL prefix for static files

# Directory where Django will look for static files during development
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Directory where 'collectstatic' will gather all static files for production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# AUTH_USER_MODEL = "smartdocx.CustomUser"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-$dvf+^@g*07z(z)wbslz^$-&a5o=xkb(dcu(npp5nun%f(etv!'
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # Allow all hosts for development

# Application definition

INSTALLED_APPS = [
    "daphne",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework_simplejwt',
    'rest_framework',
    'corsheaders', 
    'smartdocx',
    'ownerside',
    'customerside',
    'django_extensions',
    'imagekit',
]


ASGI_APPLICATION = "app.asgi.application"


IMAGEKIT_PUBLIC_KEY = env('public_key')
IMAGEKIT_PRIVATE_KEY = env('private_key')
IMAGEKIT_URL_ENDPOINT = env('url_endpoint')
DEFAULT_FILE_STORAGE = 'imagekitio_storage.ImageKitStorage'

APPEND_SLASH=False
# Allow all origins (for development only)
CORS_ALLOW_ALL_ORIGINS = True
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


from datetime import timedelta

SIMPLE_JWT = {
    # "ACCESS_TOKEN_LIFETIME": timedelta(minutes=10),
    # "REFRESH_TOKEN_LIFETIME": timedelta(days=30),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}



CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",   # Docker service name if needed
    "https://auto-print-x-luxl.vercel.app",
    "https://autoprintx.vercel.app"
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "https://auto-print-x-luxl.vercel.app",
    "https://autoprintx.vercel.app/"
]

# CSRF_TRUSTED_ORIGINS = [
#     "http://localhost:5173",
# ]

# âœ… Required for cross-site cookies from Vercel (HTTPS)
SESSION_COOKIE_SAMESITE = "None"
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = "None"
CSRF_COOKIE_SECURE = True

# Keep cookie active for 7 days
SESSION_COOKIE_AGE = 60 * 60 * 24 * 28
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# REST_FRAMEWORK = {
#    'DEFAULT_AUTHENTICATION_CLASSES': (
#         'smartdocx.authentication.CookiesJWTAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#         'rest_framework.authentication.TokenAuthentication',
#         # 'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#         'rest_framework.permissions.AllowAny',
#     ]
# }
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'smartdocx.authentication.CookiesJWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'APXDB',
#         'CLIENT': {
#             'host': 'mongodb+srv://ratanveer420_db_user:rrREs8gSXDNGndye@cluster0.msrajed.mongodb.net/APXDB?retryWrites=true&w=majority',
#             'tls': True
#         }
#     }
# }  


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
import os
from pathlib import Path

# Assuming BASE_DIR is defined correctly at the top of settings.py
# BASE_DIR = Path(__file__).resolve().parent.parent

# 1. Define the directory where Django will look for static files during development
STATICFILES_DIRS = [
    # Add any paths to your app's static files here if they are outside of the app directories
]

# 2. MANDATORY for production: Define the root directory where 'collectstatic' will dump all files
# This path is relative to the container's filesystem.
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATIC_URL = 'static/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
